{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comment.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","About","RenderLeaders","leaders","renderLeaders","Media","left","object","body","heading","CardHeader","title","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","JSON","stringify","alert","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","onClick","outline","class","aria-hidden","Modal","isOpen","toggle","ModalHeader","ModalBody","Container","value","RenderDish","top","RenderComments","commentsRendered","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","handleLogin","toggleNav","isNavOpen","event","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newFeedback","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","addComment","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","Feedback","feedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bbe0b97.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />   \r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}  isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish}){\r\n    return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link> \r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return(\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>            \r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n    \r\n    function RenderLeaders({leaders, isLoading, errMess}){\r\n\r\n        const renderLeaders = leaders.leaders.map((leader) => {\r\n            return (\r\n                <Fade in>\r\n                    <Media key={leader.id} className=\"m-5\">\r\n                        <Media left className=\"mr-5\">\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name}/>\r\n                        </Media>\r\n                        <Media body>\r\n                            <Media heading>\r\n                                {leader.name} \r\n                            </Media>\r\n                            {leader.designation}\r\n                            <br/> <br/>\r\n                            {leader.description}\r\n                        </Media>\r\n                    </Media>  \r\n                </Fade>     \r\n            );\r\n        });\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(renderLeaders);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Stagger in>\r\n                            <RenderLeaders leaders={props.leaders} isLoading={props.isLoading} errMess={props.errMess}/>\r\n                        </Stagger>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // this.state = {\r\n        //     firstname: '',\r\n        //     lastname: '',\r\n        //     telnum: '',\r\n        //     email: '',\r\n        //     agree: false,\r\n        //     contactType: 'Tel.',\r\n        //     message: '',\r\n        //     touched: {\r\n        //         firstname: false,\r\n        //         lastname: false,\r\n        //         telnum: false,\r\n        //         email: false\r\n        //     }\r\n        // };\r\n\r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleBlur = this.handleBlur.bind(this)\r\n    }\r\n\r\n    // handleInputChange(event) {\r\n    //     const target = event.target;\r\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    //     const name = target.name;\r\n    \r\n    //     this.setState({\r\n    //       [name]: value\r\n    //     });\r\n    // }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message, this.props.id)\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    // handleBlur = (field) => (evt) => {\r\n    //     this.setState({\r\n    //         touched: { ...this.state.touched, [field]: true }\r\n    //     })\r\n    // }\r\n\r\n    // validate(firstname, lastname, telnum, email){\r\n    //     const error = {\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     }\r\n\r\n    //     if(this.state.touched.firstname && firstname.length < 3){\r\n    //         error.firstname = \"First name should be greater than or equal to 3 characters\";\r\n    //     } else if (this.state.touched.firstname && firstname.length > 10){\r\n    //         error.firstname = \"First name should be less than or equal to 10 characters\";\r\n    //     }\r\n        \r\n    //     if(this.state.touched.lastname && lastname.length < 3){\r\n    //         error.lastname = \"Last name should be greater than or equal to 3 characters\";\r\n    //     } else if (this.state.touched.firstname && lastname.length > 10){\r\n    //         error.lastname = \"Last name should be less than or equal to 10 characters\";\r\n    //     }\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if(this.state.touched.telnum && !reg.test(telnum)){\r\n    //         error.telnum = \"Telephone number should not contain letters\";\r\n    //     }\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n    //         error.email = \"Email should contain a @ sign\"\r\n        \r\n    //     return error;\r\n    // }\r\n\r\n    render() {\r\n        // const error = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>  \r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/contactus\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                            placeholder=\"First Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                    <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}> \r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Label, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state={\r\n          isModalOpen: false\r\n      }\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Button onClick={this.toggleModal} outline color=\"secondary\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <Container className=\"themed-container\">\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>5</option>\r\n                                        <option>4</option>\r\n                                        <option>3</option>\r\n                                        <option>2</option>\r\n                                        <option>1</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model='.author' id=\"author\" name=\"author\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model='.comment' id=\"comment\" name=\"comment\"  rows=\"6\" className=\"form-control\"/>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </Container>        \r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({dish}){\r\n    return(\r\n        <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>   \r\n            </Card> \r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\n\r\nfunction RenderComments({comments}){\r\n    const commentsRendered = comments.map((comment) => {\r\n        return(\r\n            <Fade in>\r\n                <div key={comment.id}>\r\n                    <CardText>{comment.comment}</CardText>\r\n                    <CardText>--{comment.author} , {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</CardText>\r\n                    <CardText></CardText>\r\n                </div>  \r\n            </Fade>\r\n        );\r\n    })\r\n\r\n    return(\r\n        <Card>\r\n            <h3>Comments</h3>\r\n            <Stagger in>\r\n                {commentsRendered}\r\n            </Stagger>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    var dish = props.dish;\r\n    var comments = props.comments;\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={dish}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                        <CommentForm postComment={props.postComment}\r\n                            dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(null)\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label  } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n              <Form onSubmit={this.handleLogin}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input type='text' id=\"username\" name=\"username\" innerRef={(input) => this.username = input}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input type='password' id=\"password\" name=\"password\" innerRef={(input) => this.password = input}/>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.checkbox = input}/>\r\n                    Remember me\r\n                  </Label>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                </FormGroup>\r\n\r\n               \r\n              </Form>   \r\n          </ModalBody>\r\n        </Modal>\r\n                \r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const feedbacksFailed = (errmess) => ({\r\n  type: ActionTypes.FEEDBACK_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message, id) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n    id: id\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';","import React, {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'; //withRouter needed for react-redux\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message, id) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message, id)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\n\r\nclass Main extends Component{\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render(){\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leaders) => leaders.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    const AboutUs = () => {\r\n      return(\r\n        <About leaders={this.props.leaders}\r\n               isLoading={this.props.leaders.isLoading}\r\n               errMess={this.props.leaders.errMess} />\r\n    ); \r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route path='/aboutus' component={AboutUs} />\r\n                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                <Route path='/menu/:dishId' component={DishWithId} />\r\n                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true, errMess: null, promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feedback = (state = { errMess: null, feedback:[]}, action) => {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypes.FEEDBACK_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_FEEDBACK:\r\n          var feedback = action.payload;\r\n          return { ...state, feedback: state.feedback.concat(feedback)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comment';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { Feedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: Feedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}